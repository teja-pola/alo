{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const booking = {\n  async createSubscription(subscriptionData) {\n    const response = await axiosInstance.post('/bookings', subscriptionData);\n    return response.data;\n  },\n  async getSubscriptions() {\n    const response = await axiosInstance.get('/bookings');\n    return response.data;\n  },\n  async getSubscriptionById(id) {\n    const response = await axiosInstance.get(`/bookings/${id}`);\n    return response.data;\n  },\n  async cancelSubscription(id) {\n    const response = await axiosInstance.post(`/bookings/${id}/cancel`);\n    return response.data;\n  },\n  async updateDeliveryDetails(id, deliveryDetails) {\n    const response = await axiosInstance.put(`/bookings/${id}/delivery`, deliveryDetails);\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","booking","createSubscription","subscriptionData","response","post","data","getSubscriptions","get","getSubscriptionById","id","cancelSubscription","updateDeliveryDetails","deliveryDetails","put"],"sources":["C:/Users/dteja/OneDrive/Desktop/TEJA/ALO/frontend/src/services/booking.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if it exists\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const booking = {\r\n  async createSubscription(subscriptionData) {\r\n    const response = await axiosInstance.post('/bookings', subscriptionData);\r\n    return response.data;\r\n  },\r\n\r\n  async getSubscriptions() {\r\n    const response = await axiosInstance.get('/bookings');\r\n    return response.data;\r\n  },\r\n\r\n  async getSubscriptionById(id) {\r\n    const response = await axiosInstance.get(`/bookings/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  async cancelSubscription(id) {\r\n    const response = await axiosInstance.post(`/bookings/${id}/cancel`);\r\n    return response.data;\r\n  },\r\n\r\n  async updateDeliveryDetails(id, deliveryDetails) {\r\n    const response = await axiosInstance.put(`/bookings/${id}/delivery`, deliveryDetails);\r\n    return response.data;\r\n  },\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAAC;EACjCC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,OAAO,GAAG;EACrB,MAAMC,kBAAkBA,CAACC,gBAAgB,EAAE;IACzC,MAAMC,QAAQ,GAAG,MAAMf,aAAa,CAACgB,IAAI,CAAC,WAAW,EAAEF,gBAAgB,CAAC;IACxE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,gBAAgBA,CAAA,EAAG;IACvB,MAAMH,QAAQ,GAAG,MAAMf,aAAa,CAACmB,GAAG,CAAC,WAAW,CAAC;IACrD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMG,mBAAmBA,CAACC,EAAE,EAAE;IAC5B,MAAMN,QAAQ,GAAG,MAAMf,aAAa,CAACmB,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;IAC3D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMK,kBAAkBA,CAACD,EAAE,EAAE;IAC3B,MAAMN,QAAQ,GAAG,MAAMf,aAAa,CAACgB,IAAI,CAAC,aAAaK,EAAE,SAAS,CAAC;IACnE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMM,qBAAqBA,CAACF,EAAE,EAAEG,eAAe,EAAE;IAC/C,MAAMT,QAAQ,GAAG,MAAMf,aAAa,CAACyB,GAAG,CAAC,aAAaJ,EAAE,WAAW,EAAEG,eAAe,CAAC;IACrF,OAAOT,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}